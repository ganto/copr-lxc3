commit aa62937bc1278199028ee57be34ac259a817c9b8
Author: Free Ekanayaka <free.ekanayaka@canonical.com>
Date:   Thu Apr 12 10:50:10 2018 +0000

    Add db.ContainersNodeList
    
    Signed-off-by: Free Ekanayaka <free.ekanayaka@canonical.com>

diff --git a/lxd/db/containers.go b/lxd/db/containers.go
index 867f5971..3b93a0d5 100644
--- a/lxd/db/containers.go
+++ b/lxd/db/containers.go
@@ -663,6 +663,26 @@ func (c *Cluster) ContainersList(cType ContainerType) ([]string, error) {
 	return ret, nil
 }
 
+// ContainersNodeList returns the names of all the containers of the given type
+// running on the local node.
+func (c *Cluster) ContainersNodeList(cType ContainerType) ([]string, error) {
+	q := fmt.Sprintf("SELECT name FROM containers WHERE type=? AND node_id=? ORDER BY name")
+	inargs := []interface{}{cType, c.nodeID}
+	var container string
+	outfmt := []interface{}{container}
+	result, err := queryScan(c.db, q, inargs, outfmt)
+	if err != nil {
+		return nil, err
+	}
+
+	var ret []string
+	for _, container := range result {
+		ret = append(ret, container[0].(string))
+	}
+
+	return ret, nil
+}
+
 // ContainersResetState resets the power state of all containers.
 func (c *Cluster) ContainersResetState() error {
 	// Reset all container states
diff --git a/lxd/db/containers_test.go b/lxd/db/containers_test.go
index 291a5899..f82d079c 100644
--- a/lxd/db/containers_test.go
+++ b/lxd/db/containers_test.go
@@ -89,6 +89,30 @@ func TestContainerPool(t *testing.T) {
 	assert.Equal(t, "default", poolName)
 }
 
+// Only containers running on the local node are returned.
+func TestContainersNodeList(t *testing.T) {
+	cluster, cleanup := db.NewTestCluster(t)
+	defer cleanup()
+
+	nodeID1 := int64(1) // This is the default local node
+
+	// Add another node
+	var nodeID2 int64
+	err := cluster.Transaction(func(tx *db.ClusterTx) error {
+		var err error
+		nodeID2, err = tx.NodeAdd("node2", "1.2.3.4:666")
+		require.NoError(t, err)
+		addContainer(t, tx, nodeID1, "c1")
+		addContainer(t, tx, nodeID2, "c2")
+		return nil
+	})
+	require.NoError(t, err)
+
+	names, err := cluster.ContainersNodeList(db.CTypeRegular)
+	require.NoError(t, err)
+	assert.Equal(t, names, []string{"c1"})
+}
+
 func addContainer(t *testing.T, tx *db.ClusterTx, nodeID int64, name string) {
 	stmt := `
 INSERT INTO containers(node_id, name, architecture, type) VALUES (?, ?, 1, ?)
